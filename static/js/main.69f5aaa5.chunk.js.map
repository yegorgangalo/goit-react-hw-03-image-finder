{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/SearchBar/SearchBar.js","components/ImageGalleryList/ImageGalleryList.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","App.jsx","index.js","components/Button/Button.module.css"],"names":["module","exports","SearchBar","state","searchQuery","handleInputChange","target","setState","value","onSubmitForm","event","preventDefault","trim","props","onSubmit","toast","warn","console","log","reset","this","className","type","autoComplete","autoFocus","placeholder","onChange","PureComponent","ImageGalleryList","imgArray","map","id","webformatURL","largeImageURL","tags","src","alt","data-full-size","Button","onClickFetch","show","s","button","onClick","size","iconSpin","iconSpinBtn","keyAPI","IDLE","PENDING","REJECTED","RESOLVED","defaultState","status","error","totalHitsLength","page","ImageGallery","staticFetchOptions","perPage","staticURL","fetchQuery","url","setTimeout","fetch","then","res","ok","json","Promise","reject","Error","hits","totalHits","length","prevState","incrementPage","catch","resetGallery","callback","buttonLoadType","btnType","prevProps","window","scrollTo","top","document","documentElement","scrollHeight","behavior","buttonType","info","message","App","setSearchQuery","autoClose","Component","defaultProps","root","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.69f5aaa5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"ImageGallery_info__MGNMe\"};","import React, { PureComponent } from 'react';\nimport { toast } from 'react-toastify';\n\nclass SearchBar extends PureComponent {\n    state = {\n      searchQuery:'',\n    }\n\n  handleInputChange = ({ target }) => {\n      this.setState({\n        searchQuery: target.value\n      })\n  }\n\n  onSubmitForm = (event) => {\n    event.preventDefault();\n    const { searchQuery } = this.state;\n    searchQuery.trim() !== '' ? this.props.onSubmit(searchQuery) : toast.warn('Input search Query');\n    console.log('before', this.state.searchQuery);\n    this.reset();\n    console.log('after', this.state.searchQuery);\n  }\n\n  reset = () => this.setState({ searchQuery: '' })\n\n    render() {\n      const { searchQuery } = this.state;\n        return (\n            <header className=\"Searchbar\">\n              <form className=\"SearchForm\" onSubmit={this.onSubmitForm}>\n                <button type=\"submit\" className=\"SearchForm-button\">\n                  <span className=\"SearchForm-button-label\">Search</span>\n                </button>\n\n                <input\n                  className=\"SearchForm-input\"\n                  type=\"text\"\n                  autoComplete=\"off\"\n                  autoFocus\n                  placeholder=\"Search images and photos\"\n                  value={searchQuery}\n                  onChange={this.handleInputChange}\n                />\n              </form>\n            </header>\n        )\n    }\n}\n\nexport default SearchBar;","import React from 'react';\n\nfunction ImageGalleryList ({imgArray}) {\n    return (\n        <ul className=\"ImageGallery\">\n                {imgArray.map(({ id, webformatURL, largeImageURL, tags }) => {\n                    return <li className=\"ImageGalleryItem\" key={id}>\n                        <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" data-full-size={largeImageURL}/>\n                </li>\n                })}\n        </ul>\n    )\n}\n\nexport default ImageGalleryList;","import React from 'react';\nimport { ImSpinner6 } from 'react-icons/im';\nimport s from './Button.module.css';\n\nfunction Button({ onClickFetch = null, type = 'more', show = true }) {\n    // if (show === false) {return <></>}\n    if (type === 'hidden') {return <></>}\n    if (type === 'more') {\n        return <button className={s.button} type=\"button\" onClick={onClickFetch}>Load More</button>;\n    }\n    if (type === 'spinner') {\n        return <ImSpinner6 size=\"36\" className={s.iconSpin} />;\n    }\n    if (type === 'loading') {\n        return (\n            <button className={s.button} type=\"button\">\n                <span>\n                    <ImSpinner6 size=\"16\" className={s.iconSpinBtn} />\n                </span>\n                <span>Loading...</span>\n            </button>)\n    }\n}\n\nexport default Button;","import React, { PureComponent } from 'react';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryList from '../ImageGalleryList';\nimport Button from '../Button';\n// import PropTypes from 'prop-types';\n\nconst keyAPI = '19532775-cd1fec64673db4c80a00103d2';\nconst status = {\n    IDLE: 'idle',\n    PENDING: 'pending',\n    REJECTED: 'rejected',\n    RESOLVED: 'resolved',\n}\nconst { IDLE, PENDING, REJECTED, RESOLVED } = status;\nconst defaultState = {\n        status: IDLE,\n        error: '',\n        imgArray: [],\n        totalHitsLength: 0,\n        page: 1,\n    }\n\nclass ImageGallery extends PureComponent {\n\n    state = { ...defaultState }\n\n    staticFetchOptions = {\n        perPage: 12,\n        staticURL: 'https://pixabay.com/api/?image_type=photo&orientation=horizontal',\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.searchQuery !== this.props.searchQuery) {\n            this.resetGallery(this.fetchQuery);\n        }\n        if (prevState.imgArray !== this.state.imgArray) {\n            window.scrollTo({\n              top: document.documentElement.scrollHeight,\n              behavior: 'smooth',\n            });\n        }\n    }\n\n    fetchQuery = () => {\n        this.setState({ status: PENDING });\n        const { searchQuery } = this.props;\n        const { page, imgArray } = this.state;\n        const { staticURL, perPage } = this.staticFetchOptions;\n        const url = `${staticURL}&q=${searchQuery}&page=${page}&per_page=${perPage}&key=${keyAPI}`;\n\n    return setTimeout(() => {\n      fetch(url)\n      .then(res => {\n        //   console.dir(res);\n          if (!res.ok) {\n              return Promise.reject(new Error(`There is no image with tag ${searchQuery}`));\n          }\n          return res.json();\n      })\n          .then(({ hits, totalHits }) => {\n            //   console.log(totalHits);\n        if (hits.length===0 && imgArray.length===0) {\n              return Promise.reject(new Error(`There is no image with tag: ${searchQuery}`));\n          }\n        this.setState((prevState) => ({\n            imgArray: [...prevState.imgArray, ...hits],\n            totalHits: totalHits,\n            status: RESOLVED,\n        }));\n        this.incrementPage();\n      }\n      )\n      .catch(error => this.setState({ error, status: REJECTED }))\n      }, 500)\n    }\n\n    incrementPage = () => this.setState((prevState) => ({ page: prevState.page +1 }));\n\n    resetGallery = (callback = null) => this.setState({ ...defaultState }, callback);\n\n    buttonLoadType = () => {\n        const { imgArray, page, totalHits, status } = this.state;\n        let btnType = 'more';\n        if(page === 1) {btnType = 'spinner'};\n        if (status === PENDING && page>1) { btnType = 'loading' };\n        if (imgArray.length >= totalHits) { btnType = 'hidden' };\n        return btnType;\n    }\n\n    render() {\n        const { imgArray, error, status } = this.state;\n        const buttonType = this.buttonLoadType();\n\n        if (status === IDLE) {\n            return <h1 className={s.info}>Input tag to find images</h1>\n        }\n        if (status === PENDING) {\n            return (\n                <>\n                <ImageGalleryList imgArray={imgArray}/>\n                <Button type={buttonType}/>\n                </>\n            )\n        }\n        if (status === REJECTED) {\n            return <h1 className={s.info}>{error.message}</h1>\n        }\n        if (status === RESOLVED) {\n            return (\n                <>\n                <ImageGalleryList imgArray={imgArray}/>\n                <Button type={buttonType} onClickFetch={this.fetchQuery} />\n                </>\n            )\n        }\n    }\n}\n\nexport default ImageGallery;","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport SearchBar from './components/SearchBar';\nimport ImageGallery from './components/ImageGallery';\n\nclass App extends Component {\n    static defaultProps = {\n      //\n    }\n\n    static propTypes = {\n        //\n    }\n\n    state = {\n      searchQuery: '',\n    }\n\n    componentDidMount(){\n\n    }\n\n    componentDidUpdate(prevProps, prevState){\n    }\n\n    setSearchQuery = (searchQuery) => {\n      this.setState({ searchQuery });\n    }\n\n    render() {\n      const { searchQuery } = this.state;\n      return (<>\n        <SearchBar onSubmit={this.setSearchQuery} />\n        <ImageGallery searchQuery={searchQuery} />\n        <ToastContainer autoClose={3000}/>\n        </>)\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nconst root = document.querySelector('#root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  root,\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\",\"iconSpin\":\"Button_iconSpin__3vRRA\",\"icon-spin\":\"Button_icon-spin__18vUR\",\"iconSpinBtn\":\"Button_iconSpinBtn__3d432\"};"],"sourceRoot":""}