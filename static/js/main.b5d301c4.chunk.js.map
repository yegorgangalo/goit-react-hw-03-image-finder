{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/SearchBar/SearchBar.js","components/ImageGallery/ImageGallery.js","App.jsx","index.js"],"names":["module","exports","SearchBar","state","searchQuery","handleInputChange","target","setState","value","onSubmitForm","event","preventDefault","trim","props","onSubmit","toast","warn","this","className","type","autoComplete","autoFocus","placeholder","onChange","PureComponent","keyAPI","IDLE","PENDING","REJECTED","RESOLVED","defaultState","status","error","hits","page","ImageGallery","staticFetchOptions","perPage","staticURL","fetchQuery","console","log","url","setTimeout","fetch","then","res","dir","ok","json","Promise","reject","Error","length","prevState","window","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","resetGallery","prevProps","size","s","iconSpin","map","id","webformatURL","largeImageURL","tags","src","alt","data-full-size","onClick","message","App","setSearchQuery","autoClose","Component","defaultProps","root","querySelector","ReactDOM","render","StrictMode"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,SAAW,+BAA+B,YAAY,kC,kJC4CzDC,G,kNAzCXC,MAAQ,CACNC,YAAY,I,EAGhBC,kBAAoB,YAAiB,IAAdC,EAAa,EAAbA,OACnB,EAAKC,SAAS,CACZH,YAAaE,EAAOE,S,EAI1BC,aAAe,SAACC,GACdA,EAAMC,iBADkB,IAEhBP,EAAgB,EAAKD,MAArBC,YACa,KAArBA,EAAYQ,OAAc,EAAKC,MAAMC,SAASV,GAAeW,IAAMC,KAAK,sBACxE,EAAKT,SAAS,CAAEH,YAAa,M,uDAGnB,IACAA,EAAgBa,KAAKd,MAArBC,YACN,OACI,wBAAQc,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaJ,SAAUG,KAAKR,aAA5C,UACE,wBAAQU,KAAK,SAASD,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZd,MAAOJ,EACPmB,SAAUN,KAAKZ,6B,GAlCTmB,kB,wCCElBC,EAAS,qCAOPC,EALE,OAKIC,EAJD,UAIUC,EAHT,WAGmBC,EAFnB,WAGRC,EAAe,CACbC,OAAQL,EACRM,MAAO,GACPC,KAAM,GACNC,KAAM,GAsGCC,E,4MAjGXhC,M,eAAa2B,G,EAEbM,mBAAqB,CACjBC,QAAS,GACTC,UAAW,oE,EAafC,WAAa,WACTC,QAAQC,IAAI,2BAA4B,EAAKtC,MAAM+B,MADpC,IAEP9B,EAAgB,EAAKS,MAArBT,YACA8B,EAAS,EAAK/B,MAAd+B,KAHO,EAIgB,EAAKE,mBAA5BE,EAJO,EAIPA,UAAWD,EAJJ,EAIIA,QACnB,EAAK9B,SAAS,CAAEwB,OAAQJ,IACxB,IAAMe,EAAG,UAAMJ,EAAN,cAAqBlC,EAArB,iBAAyC8B,EAAzC,qBAA0DG,EAA1D,gBAAyEZ,GAEtF,OAAOkB,YAAW,WAChBC,MAAMF,GACLG,MAAK,SAAAC,GAEF,OADAN,QAAQO,IAAID,GACPA,EAAIE,GAGFF,EAAIG,OAFAC,QAAQC,OAAO,IAAIC,MAAJ,qCAAwChD,QAIrEyC,MAAK,YAAe,IAAZZ,EAAW,EAAXA,KACP,GAAkB,IAAdA,EAAKoB,OACH,OAAOH,QAAQC,OAAO,IAAIC,MAAJ,qCAAwChD,KAEpE,EAAKG,UAAS,SAAC+C,GAAD,MAAgB,CAC1BrB,KAAK,GAAD,mBAAMqB,EAAUrB,MAAhB,YAAyBA,IAC7BF,OAAQF,EACRK,KAAMoB,EAAUpB,KAAM,MAE1BqB,OAAOC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,cAIbC,OAAM,SAAA9B,GAAK,OAAI,EAAKzB,SAAS,CAAEyB,QAAOD,OAAQH,SAC5C,M,EAGLmC,aAAe,WACXvB,QAAQC,IAAI,0BAA2B,EAAKtC,MAAM+B,MAClD,EAAK3B,SAAL,eAAmBuB,K,iEAhDJkC,EAAWV,GAAY,IAC9BlD,EAAgBa,KAAKJ,MAArBT,YACJ4D,EAAU5D,cAAgBA,IAE1Ba,KAAK8C,eAEL9C,KAAKsB,gB,+BA8CH,IAAD,EACiCtB,KAAKd,MAAnC8B,EADH,EACGA,KAAMD,EADT,EACSA,MAAOD,EADhB,EACgBA,OAAQG,EADxB,EACwBA,KAC7B,GAAIH,IAAWL,EACX,OAAO,0DAEX,GAAIK,IAAWJ,EAAS,CACpB,GAAa,IAATO,EAAc,OAAO,cAAC,IAAD,CAAY+B,KAAK,KAAK/C,UAAWgD,IAAEC,WAC5D,GAAIjC,EAAO,EAAI,OAAQ,qCACnB,oBAAIhB,UAAU,eAAd,SACCe,EAAKmC,KAAI,YAAgD,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,KAC1C,OAAO,oBAAItD,UAAU,mBAAd,SACH,qBAAKuD,IAAKH,EAAcI,IAAKF,EAAMtD,UAAU,yBAAyByD,iBAAgBJ,KAD7CF,QAKjD,wBAAQlD,KAAK,SAASyD,QAAS3D,KAAKsB,WAApC,qBAIR,OAAIR,IAAWH,EACJ,6BAAKI,EAAM6C,UAElB9C,IAAWF,EACH,qCACJ,oBAAIX,UAAU,eAAd,SACCe,EAAKmC,KAAI,YAAgD,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,KAC1C,OAAO,oBAAItD,UAAU,mBAAd,SACH,qBAAKuD,IAAKH,EAAcI,IAAKF,EAAMtD,UAAU,yBAAyByD,iBAAgBJ,KAD7CF,QAKjD,wBAAQlD,KAAK,SAASyD,QAAS3D,KAAKsB,WAApC,0BATR,M,GAnFmBf,iBCdrBsD,E,4MASF3E,MAAQ,CACNC,YAAa,I,EAUf2E,eAAiB,SAAC3E,GAChB,EAAKG,SAAS,CAAEH,iB,8GAJC4D,EAAWV,M,+BAOpB,IACAlD,EAAgBa,KAAKd,MAArBC,YACR,OAAQ,qCACN,cAAC,EAAD,CAAWU,SAAUG,KAAK8D,iBAC1B,cAAC,EAAD,CAAc3E,YAAaA,IAC3B,cAAC,IAAD,CAAgB4E,UAAW,a,GA7BjBC,aAAZH,EACKI,aAAe,GAiCXJ,QCnCTK,EAAOzB,SAAS0B,cAAc,SAEpCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.b5d301c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconSpin\":\"ImageGallery_iconSpin__iIhIC\",\"icon-spin\":\"ImageGallery_icon-spin__-r4fN\"};","import React, { PureComponent } from 'react';\nimport { toast } from 'react-toastify';\n\nclass SearchBar extends PureComponent {\n    state = {\n      searchQuery:'',\n    }\n\n  handleInputChange = ({ target }) => {\n      this.setState({\n        searchQuery: target.value\n      })\n  }\n\n  onSubmitForm = (event) => {\n    event.preventDefault();\n    const { searchQuery } = this.state;\n    searchQuery.trim()!=='' ? this.props.onSubmit(searchQuery) : toast.warn('Input search Query');\n    this.setState({ searchQuery: '' });\n  }\n\n    render() {\n      const { searchQuery } = this.state;\n        return (\n            <header className=\"Searchbar\">\n              <form className=\"SearchForm\" onSubmit={this.onSubmitForm}>\n                <button type=\"submit\" className=\"SearchForm-button\">\n                  <span className=\"SearchForm-button-label\">Search</span>\n                </button>\n\n                <input\n                  className=\"SearchForm-input\"\n                  type=\"text\"\n                  autoComplete=\"off\"\n                  autoFocus\n                  placeholder=\"Search images and photos\"\n                  value={searchQuery}\n                  onChange={this.handleInputChange}\n                />\n              </form>\n            </header>\n        )\n    }\n}\n\nexport default SearchBar;","import React, { PureComponent } from 'react';\nimport { ImSpinner6 } from 'react-icons/im';\nimport s from './ImageGallery.module.css';\n// import PropTypes from 'prop-types';\n\nconst keyAPI = '19532775-cd1fec64673db4c80a00103d2';\nconst status = {\n    IDLE: 'idle',\n    PENDING: 'pending',\n    REJECTED: 'rejected',\n    RESOLVED: 'resolved',\n}\nconst { IDLE, PENDING, REJECTED, RESOLVED } = status;\nconst defaultState = {\n        status: IDLE,\n        error: '',\n        hits: [],\n        page: 1,\n    }\n\nclass ImageGallery extends PureComponent {\n\n    state = { ...defaultState }\n\n    staticFetchOptions = {\n        perPage: 12,\n        staticURL: 'https://pixabay.com/api/?image_type=photo&orientation=horizontal',\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { searchQuery } = this.props;\n        if (prevProps.searchQuery !== searchQuery) {\n            // console.log('this.state.page before=', this.state.page);\n            this.resetGallery();\n            // console.log('this.state.page after=', this.state.page);\n            this.fetchQuery();\n        }\n    }\n\n    fetchQuery = () => {\n        console.log('this.state.page in fetch', this.state.page);\n        const { searchQuery } = this.props;\n        const { page } = this.state;\n        const { staticURL, perPage } = this.staticFetchOptions;\n        this.setState({ status: PENDING });\n        const url = `${staticURL}&q=${searchQuery}&page=${page}&per_page=${perPage}&key=${keyAPI}`;\n\n    return setTimeout(() => {\n      fetch(url)\n      .then(res => {\n          console.dir(res);\n          if (!res.ok) {\n              return Promise.reject(new Error(`There is no image with tag ${searchQuery}`));\n          }\n          return res.json();\n      })\n      .then(({ hits }) => {\n        if (hits.length===0) {\n              return Promise.reject(new Error(`There is no image with tag ${searchQuery}`));\n          }\n        this.setState((prevState) => ({\n            hits: [...prevState.hits, ...hits],\n            status: RESOLVED,\n            page: prevState.page +1,\n        }));\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      }\n      )\n      .catch(error => this.setState({ error, status: REJECTED }))\n      }, 500)\n    }\n\n    resetGallery = () => {\n        console.log('this.state.page before=', this.state.page);\n        this.setState({ ...defaultState})\n        // console.log('this.state.page after=', this.state.page);\n        }\n\n    render() {\n        const { hits, error, status, page } = this.state;\n        if (status === IDLE) {\n            return <h1>Input tag to find images</h1>\n        }\n        if (status === PENDING) {\n            if (page === 1) { return <ImSpinner6 size=\"36\" className={s.iconSpin} /> }\n            if (page > 1) {return (<>\n                <ul className=\"ImageGallery\">\n                {hits.map(({ id, webformatURL, largeImageURL, tags }) => {\n                    return <li className=\"ImageGalleryItem\" key={id}>\n                        <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" data-full-size={largeImageURL}/>\n                </li>\n                })}\n                </ul>\n                <button type=\"button\" onClick={this.fetchQuery}>More</button>\n                </>\n            )}\n        }\n        if (status === REJECTED) {\n            return <h1>{error.message}</h1>\n        }\n        if (status === RESOLVED) {\n            return (<>\n                <ul className=\"ImageGallery\">\n                {hits.map(({ id, webformatURL, largeImageURL, tags }) => {\n                    return <li className=\"ImageGalleryItem\" key={id}>\n                        <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" data-full-size={largeImageURL}/>\n                </li>\n                })}\n                </ul>\n                <button type=\"button\" onClick={this.fetchQuery}>More</button>\n                </>\n            )\n        }\n    }\n}\n\nexport default ImageGallery;","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport SearchBar from './components/SearchBar';\nimport ImageGallery from './components/ImageGallery';\n\nclass App extends Component {\n    static defaultProps = {\n      //\n    }\n\n    static propTypes = {\n        //\n    }\n\n    state = {\n      searchQuery: '',\n    }\n\n    componentDidMount(){\n\n    }\n\n    componentDidUpdate(prevProps, prevState){\n    }\n\n    setSearchQuery = (searchQuery) => {\n      this.setState({ searchQuery });\n    }\n\n    render() {\n      const { searchQuery } = this.state;\n      return (<>\n        <SearchBar onSubmit={this.setSearchQuery} />\n        <ImageGallery searchQuery={searchQuery} />\n        <ToastContainer autoClose={3000}/>\n        </>)\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nconst root = document.querySelector('#root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  root,\n);\n"],"sourceRoot":""}