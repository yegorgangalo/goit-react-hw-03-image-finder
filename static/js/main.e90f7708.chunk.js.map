{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/SearchBar/SearchBar.js","components/ImageGallery/ImageGallery.js","App.jsx","index.js"],"names":["module","exports","SearchBar","state","searchQuery","handleInputChange","target","setState","value","onSubmitForm","event","preventDefault","trim","props","onSubmit","toast","warn","this","className","type","autoComplete","autoFocus","placeholder","onChange","PureComponent","keyAPI","ImageGallery","status","error","hits","page","staticFetchOptions","perPage","staticURL","fetchQuery","console","log","url","setTimeout","fetch","then","res","dir","ok","json","Promise","reject","Error","length","prevState","catch","prevProps","size","s","iconSpin","message","map","id","webformatURL","largeImageURL","tags","src","alt","data-full-size","onClick","App","setSearchQuery","autoClose","Component","defaultProps","root","document","querySelector","ReactDOM","render","StrictMode"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,SAAW,+BAA+B,YAAY,kC,kJC4CzDC,G,kNAzCXC,MAAQ,CACNC,YAAY,I,EAGhBC,kBAAoB,YAAiB,IAAdC,EAAa,EAAbA,OACnB,EAAKC,SAAS,CACZH,YAAaE,EAAOE,S,EAI1BC,aAAe,SAACC,GACdA,EAAMC,iBADkB,IAEhBP,EAAgB,EAAKD,MAArBC,YACa,KAArBA,EAAYQ,OAAc,EAAKC,MAAMC,SAASV,GAAeW,IAAMC,KAAK,sBACxE,EAAKT,SAAS,CAAEH,YAAa,M,uDAGnB,IACAA,EAAgBa,KAAKd,MAArBC,YACN,OACI,wBAAQc,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaJ,SAAUG,KAAKR,aAA5C,UACE,wBAAQU,KAAK,SAASD,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZd,MAAOJ,EACPmB,SAAUN,KAAKZ,6B,GAlCTmB,kB,gCCElBC,EAAS,qCAgFAC,E,4MA7EXvB,MAAQ,CACJwB,OAAQ,OACRC,MAAO,GACPC,KAAM,GACNC,KAAM,G,EAGVC,mBAAqB,CACjBC,QAAS,EACTC,UAAW,oE,EASfC,WAAa,WACTC,QAAQC,IAAI,2BAA4B,EAAKjC,MAAM2B,MADpC,IAEP1B,EAAgB,EAAKS,MAArBT,YACA0B,EAAS,EAAK3B,MAAd2B,KAHO,EAIgB,EAAKC,mBAA5BE,EAJO,EAIPA,UAAWD,EAJJ,EAIIA,QACnB,EAAKzB,SAAS,CAAEoB,OAAQ,YACxB,IAAMU,EAAG,UAAMJ,EAAN,cAAqB7B,EAArB,iBAAyC0B,EAAzC,qBAA0DE,EAA1D,gBAAyEP,GAEtF,OAAOa,YAAW,WAChBC,MAAMF,GACLG,MAAK,SAAAC,GAEF,OADAN,QAAQO,IAAID,GACPA,EAAIE,GAGFF,EAAIG,OAFAC,QAAQC,OAAO,IAAIC,MAAJ,qCAAwC3C,QAIrEoC,MAAK,YAAe,IAAZX,EAAW,EAAXA,KACP,GAAkB,IAAdA,EAAKmB,OACH,OAAOH,QAAQC,OAAO,IAAIC,MAAJ,qCAAwC3C,KAEpE,EAAKG,UAAS,SAAC0C,GAAD,MAAgB,CAC1BpB,KAAK,GAAD,mBAAMoB,EAAUpB,MAAhB,YAAyBA,IAC7BF,OAAQ,WACRG,KAAMmB,EAAUnB,KAAM,SAI3BoB,OAAM,SAAAtB,GAAK,OAAI,EAAKrB,SAAS,CAAEqB,QAAOD,OAAQ,kBAC5C,M,iEAnCcwB,EAAWF,GAAY,IAC9B7C,EAAgBa,KAAKJ,MAArBT,YACR+C,EAAU/C,cAAgBA,GAAea,KAAKiB,e,+BAoCxC,IAAD,EAC2BjB,KAAKd,MAA7B0B,EADH,EACGA,KAAMD,EADT,EACSA,MAAOD,EADhB,EACgBA,OACrB,MAAe,SAAXA,EACO,0DAEI,YAAXA,EACO,cAAC,IAAD,CAAYyB,KAAK,KAAKlC,UAAWmC,IAAEC,WAE/B,aAAX3B,EACO,6BAAKC,EAAM2B,UAEP,aAAX5B,EACQ,qCACJ,oBAAIT,UAAU,eAAd,SACCW,EAAK2B,KAAI,YAAgD,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,KAC1C,OAAO,oBAAI1C,UAAU,mBAAd,SACH,qBAAK2C,IAAKH,EAAcI,IAAKF,EAAM1C,UAAU,yBAAyB6C,iBAAgBJ,KAD7CF,QAKjD,wBAAQtC,KAAK,SAAS6C,QAAS/C,KAAKiB,WAApC,0BATR,M,GA9DmBV,iBCDrByC,E,4MASF9D,MAAQ,CACNC,YAAa,I,EAUf8D,eAAiB,SAAC9D,GAChB,EAAKG,SAAS,CAAEH,iB,8GAJC+C,EAAWF,M,+BAOpB,IACA7C,EAAgBa,KAAKd,MAArBC,YACR,OAAQ,qCACN,cAAC,EAAD,CAAWU,SAAUG,KAAKiD,iBAC1B,cAAC,EAAD,CAAc9D,YAAaA,IAC3B,cAAC,IAAD,CAAgB+D,UAAW,a,GA7BjBC,aAAZH,EACKI,aAAe,GAiCXJ,QCnCTK,EAAOC,SAASC,cAAc,SAEpCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFL,K","file":"static/js/main.e90f7708.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconSpin\":\"ImageGallery_iconSpin__iIhIC\",\"icon-spin\":\"ImageGallery_icon-spin__-r4fN\"};","import React, { PureComponent } from 'react';\nimport { toast } from 'react-toastify';\n\nclass SearchBar extends PureComponent {\n    state = {\n      searchQuery:'',\n    }\n\n  handleInputChange = ({ target }) => {\n      this.setState({\n        searchQuery: target.value\n      })\n  }\n\n  onSubmitForm = (event) => {\n    event.preventDefault();\n    const { searchQuery } = this.state;\n    searchQuery.trim()!=='' ? this.props.onSubmit(searchQuery) : toast.warn('Input search Query');\n    this.setState({ searchQuery: '' });\n  }\n\n    render() {\n      const { searchQuery } = this.state;\n        return (\n            <header className=\"Searchbar\">\n              <form className=\"SearchForm\" onSubmit={this.onSubmitForm}>\n                <button type=\"submit\" className=\"SearchForm-button\">\n                  <span className=\"SearchForm-button-label\">Search</span>\n                </button>\n\n                <input\n                  className=\"SearchForm-input\"\n                  type=\"text\"\n                  autoComplete=\"off\"\n                  autoFocus\n                  placeholder=\"Search images and photos\"\n                  value={searchQuery}\n                  onChange={this.handleInputChange}\n                />\n              </form>\n            </header>\n        )\n    }\n}\n\nexport default SearchBar;","import React, { PureComponent } from 'react';\nimport { ImSpinner6 } from 'react-icons/im';\nimport s from './ImageGallery.module.css';\n// import PropTypes from 'prop-types';\n\nconst keyAPI = '19532775-cd1fec64673db4c80a00103d2';\n\nclass ImageGallery extends PureComponent {\n    state = {\n        status: 'idle',\n        error: '',\n        hits: [],\n        page: 1,\n    }\n\n    staticFetchOptions = {\n        perPage: 4,\n        staticURL: 'https://pixabay.com/api/?image_type=photo&orientation=horizontal',\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { searchQuery } = this.props;\n        prevProps.searchQuery !== searchQuery && this.fetchQuery();\n        // prevProps.searchQuery !== searchQuery && this.resetGallery() && this.fetchQuery();\n    }\n\n    fetchQuery = () => {\n        console.log('this.state.page in fetch', this.state.page);\n        const { searchQuery } = this.props;\n        const { page } = this.state;\n        const { staticURL, perPage } = this.staticFetchOptions;\n        this.setState({ status: 'pending' });\n        const url = `${staticURL}&q=${searchQuery}&page=${page}&per_page=${perPage}&key=${keyAPI}`;\n\n    return setTimeout(() => {\n      fetch(url)\n      .then(res => {\n          console.dir(res);\n          if (!res.ok) {\n              return Promise.reject(new Error(`There is no image with tag ${searchQuery}`));\n          }\n          return res.json();\n      })\n      .then(({ hits }) => {\n        if (hits.length===0) {\n              return Promise.reject(new Error(`There is no image with tag ${searchQuery}`));\n          }\n        this.setState((prevState) => ({\n            hits: [...prevState.hits, ...hits],\n            status: 'resolved',\n            page: prevState.page +1,\n        }))\n      }\n      )\n      .catch(error => this.setState({ error, status: 'rejected' }))\n      }, 500)\n    }\n\n    render() {\n        const { hits, error, status } = this.state;\n        if (status === 'idle') {\n            return <h1>Input tag to find images</h1>\n        }\n        if (status === 'pending') {\n            return <ImSpinner6 size=\"36\" className={s.iconSpin}/>\n        }\n        if (status === 'rejected') {\n            return <h1>{error.message}</h1>\n        }\n        if (status === 'resolved') {\n            return (<>\n                <ul className=\"ImageGallery\">\n                {hits.map(({ id, webformatURL, largeImageURL, tags }) => {\n                    return <li className=\"ImageGalleryItem\" key={id}>\n                        <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" data-full-size={largeImageURL}/>\n                </li>\n                })}\n                </ul>\n                <button type=\"button\" onClick={this.fetchQuery}>More</button>\n                </>\n            )\n        }\n    }\n}\n\nexport default ImageGallery;","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport SearchBar from './components/SearchBar';\nimport ImageGallery from './components/ImageGallery';\n\nclass App extends Component {\n    static defaultProps = {\n      //\n    }\n\n    static propTypes = {\n        //\n    }\n\n    state = {\n      searchQuery: '',\n    }\n\n    componentDidMount(){\n\n    }\n\n    componentDidUpdate(prevProps, prevState){\n    }\n\n    setSearchQuery = (searchQuery) => {\n      this.setState({ searchQuery });\n    }\n\n    render() {\n      const { searchQuery } = this.state;\n      return (<>\n        <SearchBar onSubmit={this.setSearchQuery} />\n        <ImageGallery searchQuery={searchQuery} />\n        <ToastContainer autoClose={3000}/>\n        </>)\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nconst root = document.querySelector('#root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  root,\n);\n"],"sourceRoot":""}